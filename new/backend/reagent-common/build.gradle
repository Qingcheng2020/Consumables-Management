configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

def lmr = 'file://' + new File('C:\\Users\\Lenovo\\.m2\\repository').absolutePath

repositories {
//	maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
//	maven{ url 'http://mvnrepository.com/'}
	mavenCentral()
	mavenLocal()
	maven { url lmr }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.aliyun:aliyun-java-sdk-dysmsapi:2.2.1'
    implementation 'com.aliyun:aliyun-java-sdk-aliyuncvc:1.0.14'
    compile "org.springframework.boot:spring-boot-configuration-processor:2.4.2"

	//swagger
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'


	//redis
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//DB Page Search
	implementation 'com.github.pagehelper:pagehelper:5.2.0'


	//AOP
	compile 'org.aspectj:aspectjrt:1.8.10'
	compile 'org.aspectj:aspectjweaver:1.9.6'

	//base project
	//api  project(':reagent-api')
	//api  project(':reagent-db')

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	compile 'com.tencentcloudapi:tencentcloud-sdk-java:3.1.374'
	compile "org.apache.httpcomponents:httpcore"
	compile "org.apache.httpcomponents:httpclient"
	compile "org.apache.httpcomponents:httpmime"
	compile "com.alibaba:fastjson:1.2.34"

	compile "com.github.binarywang:weixin-java-mp:3.3.0"
}

test {
	useJUnitPlatform()
}

jar {
	enabled = true
}
