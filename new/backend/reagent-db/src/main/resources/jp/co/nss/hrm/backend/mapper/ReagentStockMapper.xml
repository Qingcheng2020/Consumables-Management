<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.nss.hrm.backend.mapper.ReagentStockMapper">
  <resultMap id="BaseResultMap" type="jp.co.nss.hrm.backend.model.ReagentStock">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="stock_no" jdbcType="VARCHAR" property="stockNo" />
    <result column="stock_type" jdbcType="VARCHAR" property="stockType" />
    <result column="reagent_id" jdbcType="VARCHAR" property="reagentId" />
    <result column="reagent_name" jdbcType="VARCHAR" property="reagentName" />
    <result column="reagent_type" jdbcType="VARCHAR" property="reagentType" />
    <result column="reagent_unit" jdbcType="VARCHAR" property="reagentUnit" />
    <result column="branch_name" jdbcType="VARCHAR" property="branchName" />
    <result column="factory" jdbcType="VARCHAR" property="factory" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="quantity" jdbcType="BIGINT" property="quantity" />
    <result column="reagent_price" jdbcType="DOUBLE" property="reagentPrice" />
    <result column="reagent_status" jdbcType="VARCHAR" property="reagentStatus" />
    <result column="reagent_temp" jdbcType="VARCHAR" property="reagentTemp" />
    <result column="low_stock" jdbcType="VARCHAR" property="lowStock" />
    <result column="overdue_stock" jdbcType="INTEGER" property="overdueStock" />
    <result column="overdue" jdbcType="INTEGER" property="overdue" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="delete_flag" jdbcType="TINYINT" property="deleteFlag" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
    <result column="delete_by" jdbcType="VARCHAR" property="deleteBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stock_no, stock_type, reagent_id, reagent_name, reagent_type, reagent_unit, branch_name, 
    factory, supplier_name, quantity, reagent_price, reagent_status, reagent_temp, low_stock, 
    overdue_stock, overdue, create_time, create_by, update_time, update_by, delete_flag, 
    delete_time, delete_by
  </sql>
  <select id="selectByExample" parameterType="jp.co.nss.hrm.backend.model.ReagentStockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reagent_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reagent_stock
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByReagentId" parameterType="jp.co.nss.hrm.backend.model.ReagentStock" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from reagent_stock
    where reagent_id = #{reagentid,jdbcType=VARCHAR}
      and branch_name = #{destination,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from reagent_stock
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="outFromBranch" parameterType="jp.co.nss.hrm.backend.model.ReagentStock">
    update reagent_stock_detail
    set reagent_status='1999'
    where stock_no = #{stock_no,jdbcType=VARCHAR}
      and branch=#{name,jdbcType=VARCHAR}
      and reagent_status='1998'
    order by remain_day ASC
    limit ${Number}
  </delete>
  <update id="outFromCentre" parameterType="jp.co.nss.hrm.backend.model.ReagentStock">
    update reagent_stock_detail
    set branch =#{branch,jdbcType=VARCHAR}
    where reagent_id=#{reagentcode,jdbcType=VARCHAR}
      and branch='中心库'
      and reagent_status='1998'
    order by remain_day ASC
    limit ${number}
  </update>
  <delete id="deleteByExample" parameterType="jp.co.nss.hrm.backend.model.ReagentStockExample">
    delete from reagent_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.nss.hrm.backend.model.ReagentStock">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reagent_stock (stock_no, stock_type, reagent_id, 
      reagent_name, reagent_type, reagent_unit, 
      branch_name, factory, supplier_name, 
      quantity, reagent_price, reagent_status, 
      reagent_temp, low_stock, overdue_stock, 
      overdue, create_time, create_by, 
      update_time, update_by, delete_flag, 
      delete_time, delete_by)
    values (#{stockNo,jdbcType=VARCHAR}, #{stockType,jdbcType=VARCHAR}, #{reagentId,jdbcType=VARCHAR}, 
      #{reagentName,jdbcType=VARCHAR}, #{reagentType,jdbcType=VARCHAR}, #{reagentUnit,jdbcType=VARCHAR}, 
      #{branchName,jdbcType=VARCHAR}, #{factory,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=BIGINT}, #{reagentPrice,jdbcType=DOUBLE}, #{reagentStatus,jdbcType=VARCHAR}, 
      #{reagentTemp,jdbcType=VARCHAR}, #{lowStock,jdbcType=VARCHAR}, #{overdueStock,jdbcType=INTEGER}, 
      #{overdue,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=TINYINT}, 
      #{deleteTime,jdbcType=TIMESTAMP}, #{deleteBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="jp.co.nss.hrm.backend.model.ReagentStock">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into reagent_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stockNo != null">
        stock_no,
      </if>
      <if test="stockType != null">
        stock_type,
      </if>
      <if test="reagentId != null">
        reagent_id,
      </if>
      <if test="reagentName != null">
        reagent_name,
      </if>
      <if test="reagentType != null">
        reagent_type,
      </if>
      <if test="reagentUnit != null">
        reagent_unit,
      </if>
      <if test="branchName != null">
        branch_name,
      </if>
      <if test="factory != null">
        factory,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="reagentPrice != null">
        reagent_price,
      </if>
      <if test="reagentStatus != null">
        reagent_status,
      </if>
      <if test="reagentTemp != null">
        reagent_temp,
      </if>
      <if test="lowStock != null">
        low_stock,
      </if>
      <if test="overdueStock != null">
        overdue_stock,
      </if>
      <if test="overdue != null">
        overdue,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="deleteBy != null">
        delete_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stockNo != null">
        #{stockNo,jdbcType=VARCHAR},
      </if>
      <if test="stockType != null">
        #{stockType,jdbcType=VARCHAR},
      </if>
      <if test="reagentId != null">
        #{reagentId,jdbcType=VARCHAR},
      </if>
      <if test="reagentName != null">
        #{reagentName,jdbcType=VARCHAR},
      </if>
      <if test="reagentType != null">
        #{reagentType,jdbcType=VARCHAR},
      </if>
      <if test="reagentUnit != null">
        #{reagentUnit,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null">
        #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        #{factory,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=BIGINT},
      </if>
      <if test="reagentPrice != null">
        #{reagentPrice,jdbcType=DOUBLE},
      </if>
      <if test="reagentStatus != null">
        #{reagentStatus,jdbcType=VARCHAR},
      </if>
      <if test="reagentTemp != null">
        #{reagentTemp,jdbcType=VARCHAR},
      </if>
      <if test="lowStock != null">
        #{lowStock,jdbcType=VARCHAR},
      </if>
      <if test="overdueStock != null">
        #{overdueStock,jdbcType=INTEGER},
      </if>
      <if test="overdue != null">
        #{overdue,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteBy != null">
        #{deleteBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.nss.hrm.backend.model.ReagentStockExample" resultType="java.lang.Long">
    select count(*) from reagent_stock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update reagent_stock
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.stockNo != null">
        stock_no = #{record.stockNo,jdbcType=VARCHAR},
      </if>
      <if test="record.stockType != null">
        stock_type = #{record.stockType,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentId != null">
        reagent_id = #{record.reagentId,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentName != null">
        reagent_name = #{record.reagentName,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentType != null">
        reagent_type = #{record.reagentType,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentUnit != null">
        reagent_unit = #{record.reagentUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.branchName != null">
        branch_name = #{record.branchName,jdbcType=VARCHAR},
      </if>
      <if test="record.factory != null">
        factory = #{record.factory,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=BIGINT},
      </if>
      <if test="record.reagentPrice != null">
        reagent_price = #{record.reagentPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.reagentStatus != null">
        reagent_status = #{record.reagentStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.reagentTemp != null">
        reagent_temp = #{record.reagentTemp,jdbcType=VARCHAR},
      </if>
      <if test="record.lowStock != null">
        low_stock = #{record.lowStock,jdbcType=VARCHAR},
      </if>
      <if test="record.overdueStock != null">
        overdue_stock = #{record.overdueStock,jdbcType=INTEGER},
      </if>
      <if test="record.overdue != null">
        overdue = #{record.overdue,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteBy != null">
        delete_by = #{record.deleteBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update reagent_stock
    set id = #{record.id,jdbcType=BIGINT},
      stock_no = #{record.stockNo,jdbcType=VARCHAR},
      stock_type = #{record.stockType,jdbcType=VARCHAR},
      reagent_id = #{record.reagentId,jdbcType=VARCHAR},
      reagent_name = #{record.reagentName,jdbcType=VARCHAR},
      reagent_type = #{record.reagentType,jdbcType=VARCHAR},
      reagent_unit = #{record.reagentUnit,jdbcType=VARCHAR},
      branch_name = #{record.branchName,jdbcType=VARCHAR},
      factory = #{record.factory,jdbcType=VARCHAR},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=BIGINT},
      reagent_price = #{record.reagentPrice,jdbcType=DOUBLE},
      reagent_status = #{record.reagentStatus,jdbcType=VARCHAR},
      reagent_temp = #{record.reagentTemp,jdbcType=VARCHAR},
      low_stock = #{record.lowStock,jdbcType=VARCHAR},
      overdue_stock = #{record.overdueStock,jdbcType=INTEGER},
      overdue = #{record.overdue,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      delete_by = #{record.deleteBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.nss.hrm.backend.model.ReagentStock">
    update reagent_stock
    <set>
      <if test="stockNo != null">
        stock_no = #{stockNo,jdbcType=VARCHAR},
      </if>
      <if test="stockType != null">
        stock_type = #{stockType,jdbcType=VARCHAR},
      </if>
      <if test="reagentId != null">
        reagent_id = #{reagentId,jdbcType=VARCHAR},
      </if>
      <if test="reagentName != null">
        reagent_name = #{reagentName,jdbcType=VARCHAR},
      </if>
      <if test="reagentType != null">
        reagent_type = #{reagentType,jdbcType=VARCHAR},
      </if>
      <if test="reagentUnit != null">
        reagent_unit = #{reagentUnit,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null">
        branch_name = #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="factory != null">
        factory = #{factory,jdbcType=VARCHAR},
      </if>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=BIGINT},
      </if>
      <if test="reagentPrice != null">
        reagent_price = #{reagentPrice,jdbcType=DOUBLE},
      </if>
      <if test="reagentStatus != null">
        reagent_status = #{reagentStatus,jdbcType=VARCHAR},
      </if>
      <if test="reagentTemp != null">
        reagent_temp = #{reagentTemp,jdbcType=VARCHAR},
      </if>
      <if test="lowStock != null">
        low_stock = #{lowStock,jdbcType=VARCHAR},
      </if>
      <if test="overdueStock != null">
        overdue_stock = #{overdueStock,jdbcType=INTEGER},
      </if>
      <if test="overdue != null">
        overdue = #{overdue,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteBy != null">
        delete_by = #{deleteBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.nss.hrm.backend.model.ReagentStock">
    update reagent_stock
    set stock_no = #{stockNo,jdbcType=VARCHAR},
      stock_type = #{stockType,jdbcType=VARCHAR},
      reagent_id = #{reagentId,jdbcType=VARCHAR},
      reagent_name = #{reagentName,jdbcType=VARCHAR},
      reagent_type = #{reagentType,jdbcType=VARCHAR},
      reagent_unit = #{reagentUnit,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      factory = #{factory,jdbcType=VARCHAR},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=BIGINT},
      reagent_price = #{reagentPrice,jdbcType=DOUBLE},
      reagent_status = #{reagentStatus,jdbcType=VARCHAR},
      reagent_temp = #{reagentTemp,jdbcType=VARCHAR},
      low_stock = #{lowStock,jdbcType=VARCHAR},
      overdue_stock = #{overdueStock,jdbcType=INTEGER},
      overdue = #{overdue,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      delete_by = #{deleteBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getdata" resultType="java.util.HashMap">
    select reagent_code,reagent_number
    from reagent_collect_detail
    where collect_no = #{id,jdbcType=BIGINT}
  </select>
</mapper>